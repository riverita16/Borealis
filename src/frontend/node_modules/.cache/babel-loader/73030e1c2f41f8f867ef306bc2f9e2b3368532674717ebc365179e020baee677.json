{"ast":null,"code":"var _jsxFileName = \"/Users/riverita16/Documents/Fall_2023/DSA/Projects/Proj3/src/frontend/src/radio.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback, useRef } from 'react';\nimport { Spotify } from 'react-spotify-embed';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport './radio.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Radio = () => {\n  _s();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const {\n    url\n  } = location.state;\n  const [updatedUrl, setUrl] = useState(url);\n  const [playback, setPlay] = useState('pause');\n  useEffect(() => {\n    const unlisten = () => {\n      // If the user goes back, navigate to the '/' endpoint\n      navigate('/');\n    };\n    window.addEventListener('popstate', unlisten);\n    return () => {\n      window.removeEventListener('popstate', unlisten);\n    };\n  }, [navigate]);\n  useEffect(() => {\n    // Reset the playback value when the component mounts (user navigates back)\n    return () => {\n      setPlay('pause');\n    };\n  }, []);\n  useEffect(() => {\n    console.log(url);\n    if (!url) {\n      navigate('/');\n      return null; // You may choose to render something else while redirecting\n    }\n  });\n\n  const nextCalledRef = useRef(false); // Prevent multiple calls to Next per song\n\n  // switch to next song in queue\n  const Next = useCallback(async e => {\n    e.preventDefault();\n    if (!nextCalledRef.current) {\n      nextCalledRef.current = true;\n      const response = await fetch('/next', {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      if (response.ok) {\n        const responseData = await response.json();\n        console.log(responseData.url);\n        setUrl(responseData.url);\n        setTimeout(() => {\n          nextCalledRef.current = false;\n        }, 1000);\n      } else {\n        alert(\"Error occurred while fetching data\");\n      }\n    }\n  }, []);\n\n  // track user pause and play for visualizer\n  useEffect(() => {\n    window.addEventListener(\"message\", event => {\n      if (event.origin !== \"https://open.spotify.com\") return;\n      if (event.data.type === 'playback_update') {\n        setPlay(prevState => {\n          if (prevState === 'pause' && !event.data.payload.isPaused) {\n            console.log('play');\n            return 'play';\n          } else if (prevState === 'play' && event.data.payload.isPaused) {\n            // when song ends go to next song\n            if (parseFloat(event.data.payload.position) === 0.0) {\n              console.log('Song ended');\n              const syntheticEvent = {\n                preventDefault: () => {}\n              };\n              Next(syntheticEvent);\n              return prevState;\n            } else console.log('paused');\n            return 'pause';\n          }\n          return prevState;\n        });\n      } else if (event.data.type === 'ready') {\n        console.log('Song loaded');\n\n        // automatically start song if it was switched to automatically\n        if (playback === 'play') {\n          const spotifyEmbedWindow = document.querySelector('iframe[src*=\"https://open.spotify.com\"]').contentWindow;\n          spotifyEmbedWindow.postMessage({\n            command: 'toggle'\n          }, '*');\n        }\n      } else console.log(event.data);\n    }, false);\n  }, [Next, playback]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Radio aurora-outer\",\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      id: \"up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      id: \"down\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      id: \"left\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      id: \"right\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"box stuff\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Now Playing...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"transparent\",\n        children: /*#__PURE__*/_jsxDEV(Spotify, {\n          link: updatedUrl\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"next\",\n          onClick: Next,\n          children: \"Next Song\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 9\n  }, this);\n};\n_s(Radio, \"FMPPxdmMwkW/9UsIfiaZfSrNA0I=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = Radio;\nexport default Radio;\nvar _c;\n$RefreshReg$(_c, \"Radio\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useRef","Spotify","useNavigate","useLocation","jsxDEV","_jsxDEV","Radio","_s","navigate","location","url","state","updatedUrl","setUrl","playback","setPlay","unlisten","window","addEventListener","removeEventListener","console","log","nextCalledRef","Next","e","preventDefault","current","response","fetch","method","headers","ok","responseData","json","setTimeout","alert","event","origin","data","type","prevState","payload","isPaused","parseFloat","position","syntheticEvent","spotifyEmbedWindow","document","querySelector","contentWindow","postMessage","command","className","children","id","fileName","_jsxFileName","lineNumber","columnNumber","link","onClick","_c","$RefreshReg$"],"sources":["/Users/riverita16/Documents/Fall_2023/DSA/Projects/Proj3/src/frontend/src/radio.js"],"sourcesContent":["import React, { useState, useEffect, useCallback, useRef } from 'react';\nimport { Spotify } from 'react-spotify-embed'\nimport { useNavigate, useLocation } from 'react-router-dom'\nimport './radio.css';\n\nconst Radio = () => {\n    const navigate = useNavigate();\n\n    const location = useLocation();\n    const { url } = location.state;\n    const [updatedUrl, setUrl] = useState(url);\n    const [playback, setPlay] = useState('pause');\n\n    useEffect(() => {\n        const unlisten = () => {\n            // If the user goes back, navigate to the '/' endpoint\n            navigate('/');\n        };\n\n        window.addEventListener('popstate', unlisten);\n\n        return () => {\n            window.removeEventListener('popstate', unlisten);\n        };\n    }, [navigate]);\n\n    useEffect(() => {\n        // Reset the playback value when the component mounts (user navigates back)\n        return () => {\n            setPlay('pause');\n        };\n    }, []);\n\n    useEffect(() => {\n        console.log(url)\n        if (!url) {\n            navigate('/');\n            return null; // You may choose to render something else while redirecting\n        }\n    });\n\n    const nextCalledRef = useRef(false); // Prevent multiple calls to Next per song\n\n    // switch to next song in queue\n    const Next = useCallback(async (e) => {\n        e.preventDefault()\n\n        if (!nextCalledRef.current) {\n            nextCalledRef.current = true;\n\n            const response = await fetch('/next', {\n                method: 'GET',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n            });\n\n            if (response.ok) {\n                const responseData = await response.json();\n                console.log(responseData.url)\n                setUrl(responseData.url);\n\n                setTimeout(() => {\n                    nextCalledRef.current = false;\n                }, 1000);\n            } else {\n                alert(\"Error occurred while fetching data\");\n            }\n        }\n    }, []);\n\n    // track user pause and play for visualizer\n    useEffect(() => {\n        window.addEventListener(\n            \"message\",\n            (event) => {\n                if (event.origin !== \"https://open.spotify.com\") return;\n\n                if (event.data.type === 'playback_update') {\n                    setPlay((prevState) => {\n                        if (prevState === 'pause' && !event.data.payload.isPaused) {\n                            console.log('play')\n                            return 'play'\n                        } else if (prevState === 'play' && event.data.payload.isPaused) {\n                            // when song ends go to next song\n                            if (parseFloat(event.data.payload.position) === 0.0) {\n                                console.log('Song ended')\n                                const syntheticEvent = {\n                                    preventDefault: () => {}\n                                }\n\n                                Next(syntheticEvent)\n                                return prevState\n\n                            } else console.log('paused')\n                            \n                            return 'pause'\n                        }\n    \n                        return prevState\n                    });                \n                } else if (event.data.type === 'ready') {\n                    console.log('Song loaded')\n\n                    // automatically start song if it was switched to automatically\n                    if (playback === 'play') {\n                        const spotifyEmbedWindow = document.querySelector('iframe[src*=\"https://open.spotify.com\"]').contentWindow;\n                        spotifyEmbedWindow.postMessage({command: 'toggle'}, '*');\n                    }\n                }\n\n                else console.log(event.data)\n            },\n            false,\n        );\n    }, [Next, playback]);\n\n    return (\n        <div className=\"Radio aurora-outer\">\n            <section id=\"up\" />\n            <section id=\"down\" />\n            <section id=\"left\" />\n            <section id=\"right\" />\n            <div className=\"box stuff\">\n                <h1>Now Playing...</h1>\n\n                <div id=\"transparent\">\n                    <Spotify link={updatedUrl} />\n                </div>\n                <div>\n                    <button id=\"next\" onClick={Next}>Next Song</button>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Radio;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}