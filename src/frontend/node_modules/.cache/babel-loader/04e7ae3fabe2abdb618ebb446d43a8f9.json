{"ast":null,"code":"var _jsxFileName = \"/Users/riverita16/Documents/Fall_2023/DSA/Projects/Proj3/spotifySrc/frontend/src/radio.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Spotify } from 'react-spotify-embed';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport './radio.css';\nconst Radio = () => {\n  const [url, setUrl] = useState('');\n  const navigate = useNavigate();\n  const location = useLocation();\n  useEffect(() => {\n    // Reset the input values when the component mounts (user navigates back)\n    return () => {\n      setUrl(location.state);\n    };\n  }, []);\n  useEffect(() => {\n    console.log(url);\n    if (!url) {\n      navigate('/');\n      return null; // You may choose to render something else while redirecting\n    }\n  });\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Radio\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, \"Now Playing...\"), /*#__PURE__*/React.createElement(Spotify, {\n    link: url,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }));\n};\nexport default Radio;\n\n// <iframe autoPlay title=\"Spotify Web Player\" src={`https://open.spotify.com/embed${fullURL.pathname}`} width={300} height={380} allow=\"encrypted-media\" style={{borderRadius: 0}}/>","map":{"version":3,"names":["React","useState","useEffect","Spotify","useNavigate","useLocation","Radio","url","setUrl","navigate","location","state","console","log","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","link"],"sources":["/Users/riverita16/Documents/Fall_2023/DSA/Projects/Proj3/spotifySrc/frontend/src/radio.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Spotify } from 'react-spotify-embed'\nimport { useNavigate, useLocation } from 'react-router-dom'\nimport './radio.css';\n\nconst Radio = () => {\n    const [url, setUrl] = useState('');\n\n    const navigate = useNavigate();\n    const location = useLocation();\n\n    useEffect(() => {\n        // Reset the input values when the component mounts (user navigates back)\n        return () => {\n            setUrl(location.state);\n        };\n    }, []);\n\n    useEffect(() => {\n        console.log(url)\n        if (!url) {\n            navigate('/');\n            return null; // You may choose to render something else while redirecting\n        }\n    });\n\n    return (\n        <div className='Radio'>\n            <h1>Now Playing...</h1>\n            <Spotify link={url} />\n        </div>\n    );\n}\n\nexport default Radio;\n\n\n// <iframe autoPlay title=\"Spotify Web Player\" src={`https://open.spotify.com/embed${fullURL.pathname}`} width={300} height={380} allow=\"encrypted-media\" style={{borderRadius: 0}}/>\n\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,OAAO,QAAQ,qBAAqB;AAC7C,SAASC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AAC3D,OAAO,aAAa;AAEpB,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAChB,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAElC,MAAMQ,QAAQ,GAAGL,WAAW,CAAC,CAAC;EAC9B,MAAMM,QAAQ,GAAGL,WAAW,CAAC,CAAC;EAE9BH,SAAS,CAAC,MAAM;IACZ;IACA,OAAO,MAAM;MACTM,MAAM,CAACE,QAAQ,CAACC,KAAK,CAAC;IAC1B,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EAENT,SAAS,CAAC,MAAM;IACZU,OAAO,CAACC,GAAG,CAACN,GAAG,CAAC;IAChB,IAAI,CAACA,GAAG,EAAE;MACNE,QAAQ,CAAC,GAAG,CAAC;MACb,OAAO,IAAI,CAAC,CAAC;IACjB;EACJ,CAAC,CAAC;;EAEF,oBACIT,KAAA,CAAAc,aAAA;IAAKC,SAAS,EAAC,OAAO;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAClBrB,KAAA,CAAAc,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,gBAAkB,CAAC,eACvBrB,KAAA,CAAAc,aAAA,CAACX,OAAO;IAACmB,IAAI,EAAEf,GAAI;IAAAS,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CACpB,CAAC;AAEd,CAAC;AAED,eAAef,KAAK;;AAGpB"},"metadata":{},"sourceType":"module"}