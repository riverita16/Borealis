{"ast":null,"code":"var _jsxFileName = \"/Users/riverita16/Documents/Fall_2023/DSA/Projects/Proj3/src/frontend/src/radio.js\";\nimport React, { useState, useEffect, useCallback, useRef } from 'react';\nimport { Spotify } from 'react-spotify-embed';\nimport { useNavigate, useLocation, useHistory } from 'react-router-dom';\nimport './radio.css';\nconst Radio = () => {\n  const navigate = useNavigate();\n  const history = useHistory();\n  const location = useLocation();\n  const {\n    url\n  } = location.state;\n  const [updatedUrl, setUrl] = useState(url);\n  const [playback, setPlay] = useState('pause');\n  useEffect(() => {\n    // Listen for changes in the route\n    const unlisten = history.listen((location, action) => {\n      if (action === 'POP') {\n        // If the user goes back, navigate to the '/' endpoint\n        history.push('/');\n      }\n    });\n\n    // Cleanup the listener when the component unmounts\n    return () => unlisten();\n  }, [history]);\n  useEffect(() => {\n    // Reset the playback value when the component mounts (user navigates back)\n    return () => {\n      setPlay('pause');\n    };\n  }, []);\n  useEffect(() => {\n    console.log(url);\n    if (!url) {\n      navigate('/');\n      return null; // You may choose to render something else while redirecting\n    }\n  });\n\n  const nextCalledRef = useRef(false); // Prevent multiple calls to Next per song\n\n  // switch to next song in queue\n  const Next = useCallback(async e => {\n    e.preventDefault();\n    if (!nextCalledRef.current) {\n      nextCalledRef.current = true;\n      const response = await fetch('/next', {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      if (response.ok) {\n        const responseData = await response.json();\n        console.log(responseData.url);\n        setUrl(responseData.url);\n        setTimeout(() => {\n          nextCalledRef.current = false;\n        }, 1000);\n      } else {\n        alert(\"Error occurred while fetching data\");\n      }\n    }\n  }, []);\n\n  // track user pause and play for visualizer\n  useEffect(() => {\n    window.addEventListener(\"message\", event => {\n      if (event.origin !== \"https://open.spotify.com\") return;\n      if (event.data.type === 'playback_update') {\n        setPlay(prevState => {\n          if (prevState === 'pause' && !event.data.payload.isPaused) {\n            console.log('play');\n            return 'play';\n          } else if (prevState === 'play' && event.data.payload.isPaused) {\n            // when song ends go to next song\n            if (parseFloat(event.data.payload.position) === 0.0) {\n              console.log('Song ended');\n              const syntheticEvent = {\n                preventDefault: () => {}\n              };\n              Next(syntheticEvent);\n              return prevState;\n            } else console.log('paused');\n            return 'pause';\n          }\n          return prevState;\n        });\n      } else if (event.data.type === 'ready') {\n        console.log('Song loaded');\n\n        // automatically start song if it was switched to automatically\n        if (playback === 'play') {\n          const spotifyEmbedWindow = document.querySelector('iframe[src*=\"https://open.spotify.com\"]').contentWindow;\n          spotifyEmbedWindow.postMessage({\n            command: 'toggle'\n          }, '*');\n        }\n      } else console.log(event.data);\n    }, false);\n  }, [Next, playback]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Radio aurora-outer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    id: \"up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"section\", {\n    id: \"down\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"section\", {\n    id: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"section\", {\n    id: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"box stuff\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 17\n    }\n  }, \"Now Playing...\"), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"transparent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Spotify, {\n    link: updatedUrl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    id: \"next\",\n    onClick: Next,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 21\n    }\n  }, \"Next Song\"))));\n};\nexport default Radio;","map":{"version":3,"names":["React","useState","useEffect","useCallback","useRef","Spotify","useNavigate","useLocation","useHistory","Radio","navigate","history","location","url","state","updatedUrl","setUrl","playback","setPlay","unlisten","listen","action","push","console","log","nextCalledRef","Next","e","preventDefault","current","response","fetch","method","headers","ok","responseData","json","setTimeout","alert","window","addEventListener","event","origin","data","type","prevState","payload","isPaused","parseFloat","position","syntheticEvent","spotifyEmbedWindow","document","querySelector","contentWindow","postMessage","command","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","id","link","onClick"],"sources":["/Users/riverita16/Documents/Fall_2023/DSA/Projects/Proj3/src/frontend/src/radio.js"],"sourcesContent":["import React, { useState, useEffect, useCallback, useRef } from 'react';\nimport { Spotify } from 'react-spotify-embed'\nimport { useNavigate, useLocation, useHistory } from 'react-router-dom'\nimport './radio.css';\n\nconst Radio = () => {\n    const navigate = useNavigate();\n    const history = useHistory();\n\n    const location = useLocation();\n    const { url } = location.state;\n    const [updatedUrl, setUrl] = useState(url);\n    const [playback, setPlay] = useState('pause');\n\n    useEffect(() => {\n        // Listen for changes in the route\n        const unlisten = history.listen((location, action) => {\n            if (action === 'POP') {\n                // If the user goes back, navigate to the '/' endpoint\n                history.push('/');\n            }\n        });\n\n        // Cleanup the listener when the component unmounts\n        return () => unlisten();\n    }, [history]);\n\n    useEffect(() => {\n        // Reset the playback value when the component mounts (user navigates back)\n        return () => {\n            setPlay('pause');\n        };\n    }, []);\n\n    useEffect(() => {\n        console.log(url)\n        if (!url) {\n            navigate('/');\n            return null; // You may choose to render something else while redirecting\n        }\n    });\n\n    const nextCalledRef = useRef(false); // Prevent multiple calls to Next per song\n\n    // switch to next song in queue\n    const Next = useCallback(async (e) => {\n        e.preventDefault()\n\n        if (!nextCalledRef.current) {\n            nextCalledRef.current = true;\n\n            const response = await fetch('/next', {\n                method: 'GET',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n            });\n\n            if (response.ok) {\n                const responseData = await response.json();\n                console.log(responseData.url)\n                setUrl(responseData.url);\n\n                setTimeout(() => {\n                    nextCalledRef.current = false;\n                }, 1000);\n            } else {\n                alert(\"Error occurred while fetching data\");\n            }\n        }\n    }, []);\n\n    // track user pause and play for visualizer\n    useEffect(() => {\n        window.addEventListener(\n            \"message\",\n            (event) => {\n                if (event.origin !== \"https://open.spotify.com\") return;\n\n                if (event.data.type === 'playback_update') {\n                    setPlay((prevState) => {\n                        if (prevState === 'pause' && !event.data.payload.isPaused) {\n                            console.log('play')\n                            return 'play'\n                        } else if (prevState === 'play' && event.data.payload.isPaused) {\n                            // when song ends go to next song\n                            if (parseFloat(event.data.payload.position) === 0.0) {\n                                console.log('Song ended')\n                                const syntheticEvent = {\n                                    preventDefault: () => {}\n                                }\n\n                                Next(syntheticEvent)\n                                return prevState\n\n                            } else console.log('paused')\n                            \n                            return 'pause'\n                        }\n    \n                        return prevState\n                    });                \n                } else if (event.data.type === 'ready') {\n                    console.log('Song loaded')\n\n                    // automatically start song if it was switched to automatically\n                    if (playback === 'play') {\n                        const spotifyEmbedWindow = document.querySelector('iframe[src*=\"https://open.spotify.com\"]').contentWindow;\n                        spotifyEmbedWindow.postMessage({command: 'toggle'}, '*');\n                    }\n                }\n\n                else console.log(event.data)\n            },\n            false,\n        );\n    }, [Next, playback]);\n\n    return (\n        <div className=\"Radio aurora-outer\">\n            <section id=\"up\" />\n            <section id=\"down\" />\n            <section id=\"left\" />\n            <section id=\"right\" />\n            <div className=\"box stuff\">\n                <h1>Now Playing...</h1>\n\n                <div id=\"transparent\">\n                    <Spotify link={updatedUrl} />\n                </div>\n                <div>\n                    <button id=\"next\" onClick={Next}>Next Song</button>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Radio;"],"mappings":"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"},"metadata":{},"sourceType":"module"}