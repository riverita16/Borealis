{"ast":null,"code":"var _jsxFileName = \"/Users/riverita16/Documents/Fall_2023/DSA/Projects/Proj3/spotifySrc/frontend/src/radio.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Spotify } from 'react-spotify-embed';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport './radio.css';\nconst Radio = () => {\n  // let canvas = document.getElementById(\"audio_visual\");\n  // let ctx = canvas.getContext(\"2d\");\n  const navigate = useNavigate();\n  const location = useLocation();\n  const {\n    url\n  } = location.state;\n  const [updatedUrl, setUrl] = useState(url);\n  const [playback, setPlay] = useState('pause');\n  useEffect(() => {\n    // Reset the playback value when the component mounts (user navigates back)\n    return () => {\n      setPlay('pause');\n    };\n  }, []);\n  useEffect(() => {\n    console.log(url);\n    if (!url) {\n      navigate('/');\n      return null; // You may choose to render something else while redirecting\n    }\n  });\n\n  // switch to next song in queue\n  const Next = async e => {\n    e.preventDefault();\n    const response = await fetch('/next', {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    if (response.ok) {\n      const responseData = await response.json();\n      console.log(responseData.url);\n      setUrl(responseData.url);\n    } else {\n      alert(\"Error occurred while fetching data\");\n    }\n  };\n\n  // track user pause and play for visualizer\n  useEffect(() => {\n    window.addEventListener(\"message\", event => {\n      if (event.origin !== \"https://open.spotify.com\") return;\n      if (event.data.type === 'playback_update') {\n        setPlay(prevState => {\n          if (prevState === 'pause' && !event.data.payload.isPaused) {\n            console.log('play');\n            return 'play';\n          } else if (prevState === 'play' && event.data.payload.isPaused) {\n            console.log('paused');\n            return 'pause';\n          }\n          return prevState;\n        });\n        console.log(parseInt(event.data.payload.position / 1000, 10) + ' : ' + parseInt(event.data.payload.duration / 1000, 10));\n      } else console.log(event.data);\n\n      // when song ends go to next song\n      if (event.data.position === event.data.duration) {\n        const syntheticEvent = {\n          preventDefault: () => {\n            // Implement preventDefault logic if needed\n          }\n        };\n        Next(syntheticEvent);\n      }\n    }, false);\n\n    // return () => {\n    //     window.removeEventListener('message', handleIframeEvent);\n    // };\n  }, [Next, playback]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Radio\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }, \"Now Playing...\"), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"transparent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Spotify, {\n    link: updatedUrl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"script\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: Next,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }\n  }, \"Next Song\")));\n};\nexport default Radio;\n\n// <iframe autoPlay title=\"Spotify Web Player\" src={`https://open.spotify.com/embed${fullURL.pathname}`} width={300} height={380} allow=\"encrypted-media\" style={{borderRadius: 0}}/>\n\n// analyzer will go in  <canvas id=\"audio_visual\"></canvas>","map":{"version":3,"names":["React","useState","useEffect","Spotify","useNavigate","useLocation","Radio","navigate","location","url","state","updatedUrl","setUrl","playback","setPlay","console","log","Next","e","preventDefault","response","fetch","method","headers","ok","responseData","json","alert","window","addEventListener","event","origin","data","type","prevState","payload","isPaused","parseInt","position","duration","syntheticEvent","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","id","link","onClick"],"sources":["/Users/riverita16/Documents/Fall_2023/DSA/Projects/Proj3/spotifySrc/frontend/src/radio.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Spotify } from 'react-spotify-embed'\nimport { useNavigate, useLocation } from 'react-router-dom'\nimport './radio.css';\n\nconst Radio = () => {\n    // let canvas = document.getElementById(\"audio_visual\");\n    // let ctx = canvas.getContext(\"2d\");\n    const navigate = useNavigate();\n\n    const location = useLocation();\n    const { url } = location.state;\n    const [updatedUrl, setUrl] = useState(url);\n    const [playback, setPlay] = useState('pause');\n\n    useEffect(() => {\n        // Reset the playback value when the component mounts (user navigates back)\n        return () => {\n            setPlay('pause');\n        };\n    }, []);\n\n    useEffect(() => {\n        console.log(url)\n        if (!url) {\n            navigate('/');\n            return null; // You may choose to render something else while redirecting\n        }\n    });\n\n    // switch to next song in queue\n    const Next = async (e) => {\n        e.preventDefault()\n\n        const response = await fetch('/next', {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n        });\n\n        if (response.ok) {\n            const responseData = await response.json();\n            console.log(responseData.url)\n            setUrl(responseData.url);\n        } else {\n            alert(\"Error occurred while fetching data\");\n        }\n    }\n\n    // track user pause and play for visualizer\n    useEffect(() => {\n        window.addEventListener(\n            \"message\",\n            (event) => {\n                if (event.origin !== \"https://open.spotify.com\") return;\n\n                if (event.data.type === 'playback_update') {\n                    setPlay((prevState) => {\n                        if (prevState === 'pause' && !event.data.payload.isPaused) {\n                            console.log('play')\n                            return 'play'\n                        } else if (prevState === 'play' && event.data.payload.isPaused) {\n                            console.log('paused')\n                            return 'pause'\n                        }\n    \n                        return prevState\n                    });\n\n                    console.log(parseInt(event.data.payload.position / 1000, 10) + ' : ' + parseInt(event.data.payload.duration / 1000, 10))\n                }\n\n                else console.log(event.data)\n\n                // when song ends go to next song\n                if (event.data.position === event.data.duration) {\n                    const syntheticEvent = {\n                        preventDefault: () => {\n                          // Implement preventDefault logic if needed\n                        }\n                    }\n                    \n                    Next(syntheticEvent)\n                }\n            },\n            false,\n        );\n\n        // return () => {\n        //     window.removeEventListener('message', handleIframeEvent);\n        // };\n    }, [Next, playback]);\n\n    return (\n        <div className='Radio'>\n            <h1>Now Playing...</h1>\n\n            <div id=\"transparent\">\n                <Spotify link={updatedUrl} />\n                <script>\n\n                </script>\n            </div>\n            <div>\n                <button onClick={Next}>Next Song</button>\n            </div>\n        </div>\n    );\n}\n\nexport default Radio;\n\n\n// <iframe autoPlay title=\"Spotify Web Player\" src={`https://open.spotify.com/embed${fullURL.pathname}`} width={300} height={380} allow=\"encrypted-media\" style={{borderRadius: 0}}/>\n\n// analyzer will go in  <canvas id=\"audio_visual\"></canvas> \n"],"mappings":"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"},"metadata":{},"sourceType":"module"}